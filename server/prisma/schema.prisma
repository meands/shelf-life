generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  displayName String
  email       String     @unique
  password    String
  role        String     @default("user")
  items       Item[]
  labels      Label[]
  reminders   Reminder[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Item {
  id         Int        @id @default(autoincrement())
  name       String
  quantity   Float
  unit       String
  expiryDate DateTime
  expiryType String
  labels     Label[]
  notes      Note[]
  user       User       @relation(fields: [userId], references: [id])
  userId     Int
  reminders  Reminder[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Label {
  id          Int      @id @default(autoincrement())
  name        String
  colour      String
  description String?
  items       Item[]
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Note {
  id        Int      @id @default(autoincrement())
  note      String
  item      Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reminder {
  id               Int      @id @default(autoincrement())
  daysBeforeExpiry Int
  isEnabled        Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userId           Int
  itemId           Int?
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  item             Item?    @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([itemId])
}
